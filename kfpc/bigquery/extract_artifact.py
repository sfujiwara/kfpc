from __future__ import annotations

from typing import TYPE_CHECKING

import yaml
from kfp.components import load_component_from_text

if TYPE_CHECKING:
    from kfp.dsl.pipeline_channel import PipelineArtifactChannel, PipelineParameterChannel
    from kfp.dsl.pipeline_task import PipelineTask

from kfpc.version import get_version


class ExtractArtifactTask:
    """Kubeflow Pipelines task for BigQuery extract job."""

    def __init__(self, task: PipelineTask) -> None:
        """Initialize ``ExtractArtifactTask`` instance."""
        self.task = task

    @property
    def output_files(self) -> PipelineArtifactChannel:
        """Return output_files artifact."""
        return self.task.outputs["output_files"]


class ExtractArtifact:
    """Kubeflow Pipelines component for BigQuery extract job.

    It's used when source table is a ``google.BQTable`` artifact generated by ``kfpc.bigquery.Query``.

    Parameters
    ----------
    name:
        Name of the component.

    """

    def __init__(self, name: str) -> None:
        """Initialize ``ExtractArtifact`` instance."""
        self.name = name

    def task(
        self,
        job_project: PipelineParameterChannel | str,
        source_table_artifact: PipelineArtifactChannel | None,
        location: PipelineParameterChannel | str = "US",
    ) -> ExtractArtifactTask:
        """Generate Kubeflow Pipelines task to submit BigQuery extract job.

        Parameters
        ----------
        job_project:
            Google Cloud Platform project ID to execute query job.
        source_table_artifact:
            `google.BQTable` artifact generated by other tasks.
            Typically, ``kfpc.bigquery.Query.destination_table`` is used.
        location:
            Location of BigQuery sources.

        Returns
        -------
        self

        """
        component_dict = {
            "name": self.name,
            "inputs": [
                {"name": "job_project", "type": "String"},
                {"name": "location", "type": "String"},
                {"name": "source_table_artifact", "type": "google.BQTable"},
            ],
            "outputs": [
                {"name": "output_files", "type": "Artifact"},
            ],
            "implementation": {
                "container": {
                    "image": f"gcr.io/sfujiwara/kfpc/bigquery:{get_version()}",
                    "command": ["inv", "extract-artifact"],
                    "args": [
                        "--job-project", {"inputValue": "job_project"},
                        "--location", {"inputValue": "location"},
                        "--table-uri", {"inputUri": "source_table_artifact"},
                        "--destination-uri", {"outputUri": "output_files"},
                        "--executor-input", {"executorInput": None},
                    ],
                },
            },
        }

        component = load_component_from_text(yaml.dump(component_dict))
        task = component(
            job_project=job_project,
            location=location,
            source_table_artifact=source_table_artifact,
        )

        return ExtractArtifactTask(task=task)
